CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
CREATE EXTENSION IF NOT EXISTS "postgis";

CREATE TABLE IF NOT EXISTS "user"
(
    uuid uuid NOT NULL DEFAULT uuid_generate_v4(),
    login character varying(255) COLLATE pg_catalog."default" NOT NULL,
    password character varying(255) COLLATE pg_catalog."default" NOT NULL,
    created_at timestamp without time zone NOT NULL,
    user_name character varying(250) COLLATE pg_catalog."default" NOT NULL DEFAULT 'Unknown'::character varying,
    CONSTRAINT user_pkey PRIMARY KEY (uuid)
);

CREATE TYPE public."tariff_type" AS ENUM (
	'YEAR');

CREATE TABLE public.tariff (
	uuid uuid DEFAULT uuid_generate_v4() NOT NULL,
	name varchar(255) NOT NULL,
	"type" public.tariff_type NOT NULL,
	price numeric(5, 2) NOT NULL,
	subtitle varchar(250) DEFAULT ''::character varying NOT NULL,
	CONSTRAINT tariff_pkey PRIMARY KEY (uuid)
);

CREATE TABLE public.payment_parameters (
	"uuid" uuid DEFAULT uuid_generate_v4() NOT NULL,
	terminal_key varchar(250) NOT NULL,
	public_key varchar NOT NULL,
	CONSTRAINT payment_parameters_pkey PRIMARY KEY (uuid)
);

CREATE TABLE public."subscription" (
	"uuid" uuid DEFAULT uuid_generate_v4() NOT NULL,
	tariff_uuid uuid NOT NULL,
	user_uuid uuid NOT NULL,
	end_at timestamp NOT NULL,
	CONSTRAINT subscription_pkey PRIMARY KEY (uuid),
	CONSTRAINT tariff_uuid_fk FOREIGN KEY (tariff_uuid) REFERENCES public.tariff("uuid"),
	CONSTRAINT user_uuid_fk FOREIGN KEY (user_uuid) REFERENCES public."user"("uuid")
);
CREATE INDEX ix_tariff ON public.subscription USING btree (uuid, tariff_uuid);
CREATE INDEX ix_tariff_user ON public.subscription USING btree (uuid, tariff_uuid, user_uuid);

CREATE TYPE public."order_status" AS ENUM (
	'PENDING',
	'DONE',
	'ERROR');

CREATE TABLE public."order" (
	id int4 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE) NOT NULL,
	user_uuid uuid NOT NULL,
	subscription_uuid uuid NULL,
	tariff_uuid uuid NOT NULL,
	status public."order_status" NOT NULL,
	created_at timestamp DEFAULT now() NOT NULL,
	updated_at timestamp DEFAULT now() NOT NULL,
	CONSTRAINT order_pkey PRIMARY KEY (id),
	CONSTRAINT subscription_uuid_fk FOREIGN KEY (subscription_uuid) REFERENCES public."subscription"("uuid"),
	CONSTRAINT tariff_uuid_fk FOREIGN KEY (tariff_uuid) REFERENCES public.tariff("uuid"),
	CONSTRAINT user_uuid_fk FOREIGN KEY (user_uuid) REFERENCES public."user"("uuid")
);

INSERT INTO "user"(uuid,login,password,created_at) VALUES('1751ba42-3936-4284-bd2f-4e48eb39e900'::uuid, 'test1@mail.ru', '$2a$16$.yH7bEhsOSKOHOMtxlmte.aH2u4Orll5tdywyX.IH4i4X/MuzEQxG',now());
INSERT INTO tariff(uuid,name,type,price,subtitle) VALUES('a7b73ce0-015e-471f-9725-02b05a710ea1'::uuid,'Годовой (базовый)','YEAR'::tariff_type,100,'Базовый тариф');
INSERT INTO payment_parameters(terminal_key,public_key) VALUES('1234','MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAv');