<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ru.notivent.dao.GeoPointDao">

    <resultMap id="GeoPointMap" type="ru.notivent.model.GeoPoint">
        <id column="p_uuid" property="uuid"/>
        <result column="user_uuid" property="userUuid"/>
        <result column="type" property="type"/>
        <result column="latitude" property="latitude"/>
        <result column="longitude" property="longitude"/>
        <result column="name" property="name"/>
        <result column="description" property="description"/>
        <result column="created_at" property="createdAt"/>
        <result column="live" property="live"/>
        <result column="grade" property="grade"/>
        <association property="location" javaType="ru.notivent.model.Location">
            <id column="l_uuid" property="id"/>
            <result column="postal_code" property="postalCode"/>
            <result column="country" property="country"/>
            <result column="area" property="area"/>
            <result column="city" property="city"/>
            <result column="street" property="street"/>
            <result column="house_number" property="houseNumber"/>
            <result column="address_line" property="addressLine"/>
        </association>
    </resultMap>

    <select id="create" parameterType="map" resultType="ru.notivent.model.GeoPoint">
        INSERT INTO mvp.geo_point(user_uuid,latitude,longitude,point,name,description,type,created_at,live,user_latitude,user_longitude,location_id)
        VALUES(#{entity.userUuid}::uuid,#{entity.latitude},#{entity.longitude},
        ST_SetSRID(ST_MakePoint(#{entity.longitude}, #{entity.latitude}), 4326)::geometry,
        #{entity.name},#{entity.description},#{entity.type}::mvp.geo_point_type,#{entity.createdAt},#{entity.live},#{entity.userLatitude},#{entity.userLongitude}, #{entity.location.id})
        RETURNING *
    </select>

    <delete id="deleteById">
        DELETE
        FROM mvp.geo_point
        WHERE uuid = #{uuid}
    </delete>

    <select id="findById" resultMap="GeoPointMap">
        SELECT
            gp.uuid AS p_uuid,
            gp.user_uuid,
            gp.type,
            gp.latitude,
            gp.longitude,
            gp.name,
            gp.description,
            gp.created_at,
            gp.live,
            gp.grade,
            l.uuid AS l_uuid,
            l.postal_code,
            l.country,
            l.area,
            l.city,
            l.street,
            l.house_number,
            l.address_line
        FROM mvp.geo_point gp
        LEFT JOIN mvp.location l ON gp.location_id = l.uuid
        WHERE gp.uuid = #{uuid}
    </select>

    <select id="findByUser" resultType="ru.notivent.model.GeoPoint">
        SELECT *
        FROM mvp.geo_point
        WHERE user_uuid = #{userUuid}
    </select>

    <select id="findAllByUserAndRadius" resultType="ru.notivent.model.GeoPoint">
        SELECT *
        FROM mvp.geo_point
        WHERE ST_DWithin(geography(point), ST_SetSRID(ST_MakePoint(#{longitude}, #{latitude}), 4326)::geography, #{radius})
        AND type = 'PUBLIC'::mvp.geo_point_type
        ORDER BY created_at
        LIMIT #{limit}
    </select>

    <select id="isPointsHaveAcceptableDistance" resultType="boolean">
        SELECT ST_Distance(
        ST_SetSRID(ST_MakePoint(#{longitude}, #{latitude}), 4326)::geography,
        ST_SetSRID(ST_MakePoint(#{userLongitude}, #{userLatitude}), 4326)::geography) &lt; #{distance};
    </select>

    <update id="updateGrade">
        UPDATE mvp.geo_point
        SET grade = #{grade}
        WHERE uuid = #{uuid}
    </update>
</mapper>