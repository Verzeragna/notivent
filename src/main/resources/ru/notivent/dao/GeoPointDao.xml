<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ru.notivent.dao.GeoPointDao">

    <select id="create" parameterType="map" resultType="ru.notivent.model.GeoPoint">
        INSERT INTO mvp.geo_point(user_uuid,latitude,longitude,point,name,description,type,created_at,live)
        VALUES(#{entity.userUuid}::uuid,#{entity.latitude},#{entity.longitude},
        ST_SetSRID(ST_MakePoint(#{entity.longitude}, #{entity.latitude}), 4326)::geometry,
        #{entity.name},#{entity.description},#{entity.type}::mvp.geo_point_type,#{entity.createdAt},#{entity.live})
        RETURNING *
    </select>

    <delete id="deleteById">
        DELETE
        FROM mvp.geo_point
        WHERE uuid = #{uuid}
    </delete>

    <select id="findById" resultType="ru.notivent.model.GeoPoint">
        SELECT *
        FROM mvp.geo_point
        WHERE uuid = #{uuid}
    </select>

    <select id="findByUser" resultType="ru.notivent.model.GeoPoint">
        SELECT *
        FROM mvp.geo_point
        WHERE user_uuid = #{userUuid}
    </select>

    <select id="findAllByUserAndRadius" resultType="ru.notivent.model.GeoPoint">
        SELECT *
        FROM mvp.geo_point
        WHERE ST_DWithin(geography(point), ST_SetSRID(ST_MakePoint(#{longitude}, #{latitude}), 4326)::geography, #{radius})
        AND type = 'PUBLIC'::mvp.geo_point_type
        ORDER BY created_at
        LIMIT #{limit}
    </select>
</mapper>